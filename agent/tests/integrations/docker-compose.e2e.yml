services:
  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-e2e-test}"
    image: localstack/localstack:latest
    ports:
      - "4566:4566"            # LocalStack Gateway
      - "4510-4559:4510-4559"  # External services port range
    environment:
      # Core LocalStack configuration
      - DEBUG=1
      - PERSISTENCE=0  # Disable persistence for faster test runs
      - LAMBDA_EXECUTOR=docker
      - LAMBDA_REMOTE_DOCKER=0
      - DOCKER_HOST=unix:///var/run/docker.sock
      
      # AWS Services Configuration
      - SERVICES=lambda,apigateway,apigatewayv2,dynamodb,s3,sqs,iam,logs,events,sts
      
      # DynamoDB Configuration
      - DYNAMODB_ENDPOINT=http://localhost:4566
      - DYNAMODB_ERROR_PROBABILITY=0.0
      - DYNAMODB_HEAP_SIZE=256m
      - DYNAMODB_SHARE_DB=1
      
      # S3 Configuration
      - S3_ENDPOINT=http://localhost:4566
      - S3_SKIP_SIGNATURE_VALIDATION=1
      - S3_HOSTNAME_EXTERNAL=localhost
      - S3_HOSTNAME=localhost
      
      # SQS Configuration
      - SQS_ENDPOINT=http://localhost:4566
      
      # Lambda Configuration
      - LAMBDA_ENDPOINT=http://localhost:4566
      - LAMBDA_STAY_OPEN_MODE=1
      - LAMBDA_REMOVE_CONTAINERS=1
      - LAMBDA_DOCKER_NETWORK=localstack-net
      - LAMBDA_RUNTIME_ENVIRONMENT_TIMEOUT=60
      
      # Performance and stability settings
      - KINESIS_ERROR_PROBABILITY=0.0
      - SKIP_INFRA_DOWNLOADS=0
      - EDGE_BIND_HOST=0.0.0.0
      - EDGE_PORT=4566
      - DISABLE_CORS_CHECKS=1
      - DISABLE_CUSTOM_CORS_S3=1
      
      # Additional settings for testing
      - HOST_TMP_FOLDER=${TMPDIR:-/tmp/}localstack-e2e
      - DOCKER_SOCK=/var/run/docker.sock
      - TMPDIR=/tmp/localstack-e2e
      - DATA_DIR=/tmp/localstack-e2e/data
      
      # Logging and monitoring
      - LOG_LEVEL=INFO
      - LS_LOG=info
      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY:-}
      
      # Test environment specific
      - EAGER_SERVICE_LOADING=1
      - SKIP_SSL_CERT_DOWNLOAD=1
      
    volumes:
      - "${TMPDIR:-/tmp}/localstack-e2e:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "../..:/workspace"  # Mount the entire project
    networks:
      - localstack-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    restart: unless-stopped

  # Test initialization service
  test-init:
    image: amazon/aws-cli:latest
    depends_on:
      localstack:
        condition: service_healthy
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - "../..:/workspace"
    working_dir: /workspace
    networks:
      - localstack-net
    command: |
      sh -c "
        echo 'Waiting for LocalStack to be ready...' &&
        sleep 10 &&
        echo 'LocalStack is ready, test environment initialized!'
      "
    profiles:
      - init

networks:
  localstack-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/16 