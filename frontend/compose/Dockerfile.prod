# Build arguments for dynamic configuration
ARG BASE_URL=http://localhost:8080/api
ARG WEBSOCKET_URL=wss://localhost:8080/ws

# Build stage
FROM public.ecr.aws/docker/library/node:22-alpine AS build

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY . .

# Copy build arguments to environment variables
ARG BASE_URL
ARG WEBSOCKET_URL
ENV BASE_URL=$BASE_URL
ENV WEBSOCKET_URL=$WEBSOCKET_URL

# Replace placeholders in config file before build
RUN sed -i "s|http://localhost:8080/api|${BASE_URL}|g" src/app/shared/config.ts && \
    sed -i "s|wss://mcjihxssd4.execute-api.us-east-1.amazonaws.com/prod/|${WEBSOCKET_URL}|g" src/app/shared/config.ts

# Build the application
RUN npm run build -- --configuration production

# Production stage
FROM public.ecr.aws/docker/library/nginx:alpine

# Remove default nginx static files
RUN rm -rf /usr/share/nginx/html/*

# Copy built application
COPY --from=build /app/dist/frontend/browser /usr/share/nginx/html

# Copy nginx configuration
COPY compose/nginx.conf /etc/nginx/nginx.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]